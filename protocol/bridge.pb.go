// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.22.2
// source: bridge.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceType int32

const (
	ServiceType_UNKNOWN ServiceType = 0
	ServiceType_GAME    ServiceType = 1
	ServiceType_FIGHT   ServiceType = 2
)

// Enum value maps for ServiceType.
var (
	ServiceType_name = map[int32]string{
		0: "UNKNOWN",
		1: "GAME",
		2: "FIGHT",
	}
	ServiceType_value = map[string]int32{
		"UNKNOWN": 0,
		"GAME":    1,
		"FIGHT":   2,
	}
)

func (x ServiceType) Enum() *ServiceType {
	p := new(ServiceType)
	*p = x
	return p
}

func (x ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_bridge_proto_enumTypes[0].Descriptor()
}

func (ServiceType) Type() protoreflect.EnumType {
	return &file_bridge_proto_enumTypes[0]
}

func (x ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceType.Descriptor instead.
func (ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{0}
}

type FightType int32

const (
	FightType_UNKNOWN_FIGHT_TYPE FightType = 0
	FightType_LOCAL              FightType = 1
	FightType_SMALL_CROSS        FightType = 2
)

// Enum value maps for FightType.
var (
	FightType_name = map[int32]string{
		0: "UNKNOWN_FIGHT_TYPE",
		1: "LOCAL",
		2: "SMALL_CROSS",
	}
	FightType_value = map[string]int32{
		"UNKNOWN_FIGHT_TYPE": 0,
		"LOCAL":              1,
		"SMALL_CROSS":        2,
	}
)

func (x FightType) Enum() *FightType {
	p := new(FightType)
	*p = x
	return p
}

func (x FightType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FightType) Descriptor() protoreflect.EnumDescriptor {
	return file_bridge_proto_enumTypes[1].Descriptor()
}

func (FightType) Type() protoreflect.EnumType {
	return &file_bridge_proto_enumTypes[1]
}

func (x FightType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FightType.Descriptor instead.
func (FightType) EnumDescriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{1}
}

type RegService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ServiceType `protobuf:"varint,1,opt,name=Type,proto3,enum=bridge.ServiceType" json:"Type,omitempty"`
	// Types that are assignable to ServiceData:
	//
	//	*RegService_RegGameSrv
	//	*RegService_RegFightSrv
	ServiceData isRegService_ServiceData `protobuf_oneof:"ServiceData"`
}

func (x *RegService) Reset() {
	*x = RegService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegService) ProtoMessage() {}

func (x *RegService) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegService.ProtoReflect.Descriptor instead.
func (*RegService) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{0}
}

func (x *RegService) GetType() ServiceType {
	if x != nil {
		return x.Type
	}
	return ServiceType_UNKNOWN
}

func (m *RegService) GetServiceData() isRegService_ServiceData {
	if m != nil {
		return m.ServiceData
	}
	return nil
}

func (x *RegService) GetRegGameSrv() *RegGameSrv {
	if x, ok := x.GetServiceData().(*RegService_RegGameSrv); ok {
		return x.RegGameSrv
	}
	return nil
}

func (x *RegService) GetRegFightSrv() *RegFightSrv {
	if x, ok := x.GetServiceData().(*RegService_RegFightSrv); ok {
		return x.RegFightSrv
	}
	return nil
}

type isRegService_ServiceData interface {
	isRegService_ServiceData()
}

type RegService_RegGameSrv struct {
	RegGameSrv *RegGameSrv `protobuf:"bytes,2,opt,name=RegGameSrv,proto3,oneof"`
}

type RegService_RegFightSrv struct {
	RegFightSrv *RegFightSrv `protobuf:"bytes,3,opt,name=RegFightSrv,proto3,oneof"`
}

func (*RegService_RegGameSrv) isRegService_ServiceData() {}

func (*RegService_RegFightSrv) isRegService_ServiceData() {}

type RegServiceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    ServiceType `protobuf:"varint,1,opt,name=Type,proto3,enum=bridge.ServiceType" json:"Type,omitempty"`
	Success bool        `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RegServiceResp) Reset() {
	*x = RegServiceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegServiceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegServiceResp) ProtoMessage() {}

func (x *RegServiceResp) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegServiceResp.ProtoReflect.Descriptor instead.
func (*RegServiceResp) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{1}
}

func (x *RegServiceResp) GetType() ServiceType {
	if x != nil {
		return x.Type
	}
	return ServiceType_UNKNOWN
}

func (x *RegServiceResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RegFightSrv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FightType FightType      `protobuf:"varint,1,opt,name=FightType,proto3,enum=bridge.FightType" json:"FightType,omitempty"`
	PfId      uint32         `protobuf:"varint,2,opt,name=PfId,proto3" json:"PfId,omitempty"`
	SrvId     uint32         `protobuf:"varint,3,opt,name=SrvId,proto3" json:"SrvId,omitempty"`
	ProtoIds  map[int32]bool `protobuf:"bytes,4,rep,name=ProtoIds,proto3" json:"ProtoIds,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *RegFightSrv) Reset() {
	*x = RegFightSrv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegFightSrv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegFightSrv) ProtoMessage() {}

func (x *RegFightSrv) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegFightSrv.ProtoReflect.Descriptor instead.
func (*RegFightSrv) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{2}
}

func (x *RegFightSrv) GetFightType() FightType {
	if x != nil {
		return x.FightType
	}
	return FightType_UNKNOWN_FIGHT_TYPE
}

func (x *RegFightSrv) GetPfId() uint32 {
	if x != nil {
		return x.PfId
	}
	return 0
}

func (x *RegFightSrv) GetSrvId() uint32 {
	if x != nil {
		return x.SrvId
	}
	return 0
}

func (x *RegFightSrv) GetProtoIds() map[int32]bool {
	if x != nil {
		return x.ProtoIds
	}
	return nil
}

type RegGameSrv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PfId  uint32 `protobuf:"varint,1,opt,name=PfId,proto3" json:"PfId,omitempty"`
	SrvId uint32 `protobuf:"varint,2,opt,name=SrvId,proto3" json:"SrvId,omitempty"`
}

func (x *RegGameSrv) Reset() {
	*x = RegGameSrv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bridge_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegGameSrv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegGameSrv) ProtoMessage() {}

func (x *RegGameSrv) ProtoReflect() protoreflect.Message {
	mi := &file_bridge_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegGameSrv.ProtoReflect.Descriptor instead.
func (*RegGameSrv) Descriptor() ([]byte, []int) {
	return file_bridge_proto_rawDescGZIP(), []int{3}
}

func (x *RegGameSrv) GetPfId() uint32 {
	if x != nil {
		return x.PfId
	}
	return 0
}

func (x *RegGameSrv) GetSrvId() uint32 {
	if x != nil {
		return x.SrvId
	}
	return 0
}

var File_bridge_proto protoreflect.FileDescriptor

var file_bridge_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x67, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34,
	0x0a, 0x0a, 0x52, 0x65, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x48, 0x00, 0x52, 0x0a, 0x52, 0x65, 0x67, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x72, 0x76, 0x12, 0x37, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x53, 0x72, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x72, 0x69, 0x64,
	0x67, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x46, 0x69, 0x67, 0x68, 0x74, 0x53, 0x72, 0x76, 0x48, 0x00,
	0x52, 0x0b, 0x52, 0x65, 0x67, 0x46, 0x69, 0x67, 0x68, 0x74, 0x53, 0x72, 0x76, 0x42, 0x0d, 0x0a,
	0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x0e,
	0x52, 0x65, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0xe4, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x46, 0x69, 0x67, 0x68, 0x74, 0x53, 0x72,
	0x76, 0x12, 0x2f, 0x0a, 0x09, 0x46, 0x69, 0x67, 0x68, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x46, 0x69,
	0x67, 0x68, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x46, 0x69, 0x67, 0x68, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x66, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x50, 0x66, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x72, 0x76, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x53, 0x72, 0x76, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x08,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x46, 0x69, 0x67, 0x68, 0x74,
	0x53, 0x72, 0x76, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x36, 0x0a, 0x0a, 0x52, 0x65, 0x67, 0x47,
	0x61, 0x6d, 0x65, 0x53, 0x72, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x66, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x66, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x72,
	0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x53, 0x72, 0x76, 0x49, 0x64,
	0x2a, 0x2f, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x47, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x49, 0x47, 0x48, 0x54, 0x10,
	0x02, 0x2a, 0x3f, 0x0a, 0x09, 0x46, 0x69, 0x67, 0x68, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x12, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x46, 0x49, 0x47, 0x48, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x5f, 0x43, 0x52, 0x4f, 0x53, 0x53,
	0x10, 0x02, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bridge_proto_rawDescOnce sync.Once
	file_bridge_proto_rawDescData = file_bridge_proto_rawDesc
)

func file_bridge_proto_rawDescGZIP() []byte {
	file_bridge_proto_rawDescOnce.Do(func() {
		file_bridge_proto_rawDescData = protoimpl.X.CompressGZIP(file_bridge_proto_rawDescData)
	})
	return file_bridge_proto_rawDescData
}

var file_bridge_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_bridge_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_bridge_proto_goTypes = []any{
	(ServiceType)(0),       // 0: bridge.ServiceType
	(FightType)(0),         // 1: bridge.FightType
	(*RegService)(nil),     // 2: bridge.RegService
	(*RegServiceResp)(nil), // 3: bridge.RegServiceResp
	(*RegFightSrv)(nil),    // 4: bridge.RegFightSrv
	(*RegGameSrv)(nil),     // 5: bridge.RegGameSrv
	nil,                    // 6: bridge.RegFightSrv.ProtoIdsEntry
}
var file_bridge_proto_depIdxs = []int32{
	0, // 0: bridge.RegService.Type:type_name -> bridge.ServiceType
	5, // 1: bridge.RegService.RegGameSrv:type_name -> bridge.RegGameSrv
	4, // 2: bridge.RegService.RegFightSrv:type_name -> bridge.RegFightSrv
	0, // 3: bridge.RegServiceResp.Type:type_name -> bridge.ServiceType
	1, // 4: bridge.RegFightSrv.FightType:type_name -> bridge.FightType
	6, // 5: bridge.RegFightSrv.ProtoIds:type_name -> bridge.RegFightSrv.ProtoIdsEntry
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_bridge_proto_init() }
func file_bridge_proto_init() {
	if File_bridge_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bridge_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RegService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RegServiceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RegFightSrv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bridge_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RegGameSrv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bridge_proto_msgTypes[0].OneofWrappers = []any{
		(*RegService_RegGameSrv)(nil),
		(*RegService_RegFightSrv)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bridge_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bridge_proto_goTypes,
		DependencyIndexes: file_bridge_proto_depIdxs,
		EnumInfos:         file_bridge_proto_enumTypes,
		MessageInfos:      file_bridge_proto_msgTypes,
	}.Build()
	File_bridge_proto = out.File
	file_bridge_proto_rawDesc = nil
	file_bridge_proto_goTypes = nil
	file_bridge_proto_depIdxs = nil
}
